// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-11-01 18:08:25.95528831 +0100 CET m=+0.108430672

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "Set a bounty on gitcoin.io or drop us [line](mailto:API@diadata.org).",
        "title": "diadata.org API",
        "contact": {},
        "license": {
            "name": "GNU GPLv3"
        },
        "version": "1.0"
    },
    "host": "api.diadata.org",
    "basePath": "/",
    "paths": {
        "/v1/chartPoints/": {
            "get": {
                "description": "Get Symbol Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get chart points for",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Some exchange",
                        "name": "exchange",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Some filter",
                        "name": "filter",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scale 5m 30m 1h 4h 1d 1w",
                        "name": "scale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Points"
                        }
                    },
                    "404": {
                        "description": "Symbol not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/chartPointsAllExchanges/": {
            "get": {
                "description": "Get Symbol Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get Symbol Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Some filter",
                        "name": "filter",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scale 5m 30m 1h 4h 1d 1w",
                        "name": "scale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Points"
                        }
                    },
                    "404": {
                        "description": "Symbol not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/coins": {
            "get": {
                "description": "GetCoins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get coins",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Coins"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/pairs/": {
            "get": {
                "description": "Get pairs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get pairs",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Pairs"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/quotation/": {
            "get": {
                "description": "GetQuotation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get quotation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Quotation"
                        }
                    },
                    "404": {
                        "description": "Symbol not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/supply": {
            "post": {
                "description": "Post the circulating supply",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Post the circulating supply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin symbol",
                        "name": "Symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "number of coins in circulating supply",
                        "name": "CirculatingSupply",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dia.Supply"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/supply/": {
            "get": {
                "description": "GetSupply",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get supply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dia.Supply"
                        }
                    },
                    "404": {
                        "description": "Symbol not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/symbol/": {
            "get": {
                "description": "Get Symbol Details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get Symbol Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.SymbolDetails"
                        }
                    },
                    "404": {
                        "description": "Symbol not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        },
        "/v1/symbols": {
            "get": {
                "description": "Get all symbols list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dia"
                ],
                "summary": "Get all symbols list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Some filter",
                        "name": "filter",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scale 5m 30m 1h 4h 1d 1w",
                        "name": "scale",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/dia.Symbols"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/restApi.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dia.Pair": {
            "type": "object",
            "properties": {
                "exchange": {
                    "type": "string"
                },
                "foreignName": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "dia.Supply": {
            "type": "object",
            "properties": {
                "circulatingSupply": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "dia.Symbols": {
            "type": "object",
            "properties": {
                "symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dia.Trade": {
            "type": "object",
            "properties": {
                "estimatedUSDPrice": {
                    "type": "number"
                },
                "foreignTradeID": {
                    "type": "string"
                },
                "pair": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "source": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "models.Change": {
            "type": "object",
            "properties": {
                "usd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CurrencyChange"
                    }
                }
            }
        },
        "models.Coin": {
            "type": "object",
            "properties": {
                "circulatingSupply": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "priceYesterday": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "volumeYesterdayUSD": {
                    "type": "number"
                }
            }
        },
        "models.CoinSymbolAndName": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "models.Coins": {
            "type": "object",
            "properties": {
                "change": {
                    "type": "object",
                    "$ref": "#/definitions/models.Change"
                },
                "coins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Coin"
                    }
                },
                "completeCoinList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CoinSymbolAndName"
                    }
                }
            }
        },
        "models.CurrencyChange": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "number"
                },
                "rateYesterday": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "models.Pairs": {
            "type": "object",
            "properties": {
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dia.Pair"
                    }
                }
            }
        },
        "models.Points": {
            "type": "object",
            "properties": {
                "dataPoints": {
                    "type": "string"
                }
            }
        },
        "models.Quotation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "priceYesterday": {
                    "type": "number"
                },
                "source": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "volumeYesterdayUSD": {
                    "type": "number"
                }
            }
        },
        "models.SymbolDetails": {
            "type": "object",
            "properties": {
                "change": {
                    "type": "object",
                    "$ref": "#/definitions/models.Change"
                },
                "coin": {
                    "type": "object",
                    "$ref": "#/definitions/models.Coin"
                },
                "exchanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SymbolExchangeDetails"
                    }
                },
                "gfx1": {
                    "type": "object",
                    "$ref": "#/definitions/models.Points"
                },
                "rank": {
                    "type": "integer"
                }
            }
        },
        "models.SymbolExchangeDetails": {
            "type": "object",
            "properties": {
                "lastTrades": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dia.Trade"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "priceYesterday": {
                    "type": "number"
                },
                "time": {
                    "type": "string"
                },
                "volumeYesterdayUSD": {
                    "type": "number"
                }
            }
        },
        "restApi.APIError": {
            "type": "object",
            "properties": {
                "errorcode": {
                    "type": "integer"
                },
                "errormessage": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
